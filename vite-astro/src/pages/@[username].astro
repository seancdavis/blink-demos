---
import { beforePageLoad } from '@utils/page-hooks'
import '../styles/global.css'
import Layout from '@components/Layout.astro'
import { getUserByUsername } from '@utils/auth'
import { getUserPosts } from '@utils/posts'
import PostCard from '@components/PostCard.astro'
import ProfileNoPosts from '@components/ProfileNoPosts.astro'

const { feedback, user: currentUser } = await beforePageLoad({ cookies: Astro.cookies })

const { username } = Astro.params

// Validate username parameter
if (!username || username.length === 0) {
  return Astro.redirect('/404')
}

// Get user by username
const profileUser = await getUserByUsername(username)

// User not found
if (!profileUser) {
  return Astro.redirect('/404')
}

// Get user's posts
const userPosts = await getUserPosts(profileUser.id)

// Set cache headers for better performance
Astro.response.headers.set('Cache-Control', 'public, max-age=0, must-revalidate')
Astro.response.headers.set('Netlify-CDN-Cache-Control', 'public, durable, s-maxage=31536000')
Astro.response.headers.set('Netlify-Cache-Tag', profileUser.id)
---

<Layout title={`@${profileUser.username}'s Profile`} feedback={feedback} user={currentUser}>
  <div class="container">
    <div class="profile-header">
      <img
        class="avatar profile-avatar"
        src={profileUser.avatarSrc}
        alt={`${profileUser.username}'s avatar`}
      />
      <div class="profile-info">
        <h2>@{profileUser.username}</h2>
        <p class="profile-stats">{userPosts.length} post{userPosts.length !== 1 ? 's' : ''}</p>
      </div>
    </div>

    <div class="profile-content">
      <h1>Latest posts from @{profileUser.username}</h1>
      {
        userPosts.length > 0 ? (
          <div class="post-card-grid">
            {userPosts.map((post) => (
              <PostCard {...post} />
            ))}
          </div>
        ) : (
          <ProfileNoPosts user={profileUser} />
        )
      }
    </div>
  </div>
</Layout>
